
Select * 
From `lateral-booking-352203.covid.CovidDeaths`
order by 3, 4;


--Select the data that we are going to be using 
Select location, date, total_cases, new_cases, total_deaths, population 
From `lateral-booking-352203.covid.CovidDeaths`
Order by 1,2;


--Looking at Total Cases vs Total Deaths
--Shows the likelihood of dying if you contract covid in your country  
Select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
From `lateral-booking-352203.covid.CovidDeaths`
Order by 1, 2;

--Looking at the Total Cases vs Population 
--Shows what percentage of population for Covid 
Select location, date, total_cases, population, (total_cases/population)*100 as CasePercentage
From `lateral-booking-352203.covid.CovidDeaths`
Order by 1, 2;

--Looking at Countries with Highest Infection Rate compared to Population 
Select location, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population)*100) as HighestPercentage
From `lateral-booking-352203.covid.CovidDeaths`
Group by location, population
Order by HighestPercentage desc;

--Showing Countries with Highest Death Count per Population
Select location, MAX(cast(total_deaths as int)) as TotalDeathCount
From `lateral-booking-352203.covid.CovidDeaths`
Where continent is not null
Group by location, continent
Order by TotalDeathCount desc;

--LET'S BREAK THINGS DOWN BY CONTINENT
--Showing continent with the highest death count per population
Select continent, MAX(cast(total_deaths as int)) as TotalDeathCount
From `lateral-booking-352203.covid.CovidDeaths`
Where continent is not null
Group by continent
Order by TotalDeathCount desc;

--Global Numbers 
Select date, sum(new_cases) as total_cases, sum(cast(new_deaths as int)) as total_deaths, sum(new_deaths)/sum(new_cases)*100 as DeathPercentage
From `lateral-booking-352203.covid.CovidDeaths`
Where continent is not null
Group by date
Order by 1, 2;

Select sum(new_cases) as total_cases, sum(cast(new_deaths as int)) as total_deaths, sum(new_deaths)/sum(new_cases)*100 as DeathPercentage
From `lateral-booking-352203.covid.CovidDeaths`
Where continent is not null
Order by 1, 2;

--Looking at Total Population vs Vaccination 
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) 
  OVER (Partition by dea.location Order by dea.location, dea.date) as ProgressVaccinations, (sum(vac.new_vaccinations) 
  OVER (Partition by dea.location Order by dea.location, dea.date))/dea.population*100 as VaccPercentage
From `lateral-booking-352203.covid.CovidDeaths` dea
Join `lateral-booking-352203.covid.CovidVaccinations` vac
Using(location, date)
where dea.continent is not null
Order by 2, 3;

--Use CTE
With PopvsVac as 
(
  Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) 
  OVER (Partition by dea.location Order by dea.location, dea.date) as ProgressVaccinations
From `lateral-booking-352203.covid.CovidDeaths` dea
Join `lateral-booking-352203.covid.CovidVaccinations` vac
Using(location, date)
where dea.continent is not null
)

Select *, (ProgressVaccinations/population)*100 as VaccPercentage
From PopvsVac;

-- Temp Table 

Drop table if exists covid.PercentPopulationVaccinated;
CREATE TABLE IF NOT EXISTS covid.PercentPopulationVaccinated
(
  Continent string,
  Location string,
  Date datetime,
  Population numeric,
  New_Vaccinations Bignumeric,
  ProgressVaccinations numeric
);

INSERT INTO `lateral-booking-352203.covid.PercentPopulationVaccinated`
(Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) 
  OVER (Partition by dea.location Order by dea.location, dea.date) as ProgressVaccinations
From `lateral-booking-352203.covid.CovidDeaths` dea
Join `lateral-booking-352203.covid.CovidVaccinations` vac
Using(location, date)
Where dea.continent is not null);

Select *, (ProgressVaccinations/population)*100 as VaccPercentage
From `lateral-booking-352203.covid.PercentPopulationVaccinated`;


--Creating view to store data for later visualization
CREATE VIEW IF NOT EXISTS `lateral-booking-352203.covid.PercentPopulationVaccinated` as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) 
  OVER (Partition by dea.location Order by dea.location, dea.date) as ProgressVaccinations
From `lateral-booking-352203.covid.CovidDeaths` dea
Join `lateral-booking-352203.covid.CovidVaccinations` vac
Using(location, date)
Where dea.continent is not null


